/**
 * TowerOfHanoi v0.1
 * JavaScript library to create Tower of Hanoi game.
 *
 * Copyright (c) 2012 Akeda Bagus (admin@gedex.web.id).
 * Licensed under the MIT license.
 */
var Disc=function(a){this.options=a;var b=this.options;this.id=b.id;this.el=jQuery('<div id="disc-'+b.id+'" title="Disc '+b.id+'" class="disc"></div>');this.width=b.width;this.margin=b.margin;this.height=b.height;this.el.css({width:this.width,height:this.height,"margin-left":this.margin,"margin-right":this.margin});return true};Disc.prototype.getId=function(){return this.id};Disc.prototype.getDisc=function(){return this.el};var Peg=function(a){this.alpha="ABCDEFGHIJKLMNOPQRSTUVWXYZ";this.discs=[];this.container=jQuery('<div class="peg-container"></div>');this.peg=jQuery('<div class="peg" id="peg-'+(a+1)+'"></div>');this.id=a+1;this.label=jQuery('<div class="peg-label">'+this.alpha[a]+"</div>");this.container.append(this.peg);this.container.append(this.label);return true};Peg.prototype.top=function(){return this.discs.length>0?this.discs[0]:null};Peg.prototype.push=function(a){if(this.discs.length>0){this.discs.unshift(a)}else{this.discs.push(a)}};Peg.prototype.pop=function(){var a=this.discs.shift();return a};Peg.prototype.getPegContainer=function(){return this.container};Peg.prototype.getPeg=function(){return this.peg};var Game=function(c){this.options={numOfPegs:3,numOfDiscs:3,container:"#game-container",discHeight:25,discMaxWidth:200,destinationPeg:3};jQuery.extend(this.options,c);if(this.options.numOfPegs<0||this.options.numOfPegs>25){this.options.numOfPegs=3}if(this.options.destinationPeg<=1||this.options.destinationPeg>this.options.numOfPegs){this.options.destinationPeg=this.options.numOfPegs}this.state="init";this.result=0;var g=this.options;this.steps=0;this.maxSteps=Math.pow(2,this.options.numOfDiscs)-1;this.pegs=[];this.container=jQuery(g.container);var j=this;this.afterStep=this.options.afterStep||function(i){};this.onPause=this.options.onPause||function(i){};this.onFreeze=this.options.onFreeze||function(i){};this.afterInit=this.options.afterInit||function(i){};for(var f=0;f<g.numOfPegs;f++){this.pegs[f]=new Peg(f);this.container.append(this.pegs[f].getPegContainer());this.pegs[f].getPeg().css({"min-height":g.discHeight*g.numOfDiscs});if((f+1)===this.options.destinationPeg){this.pegs[f].getPeg().parent().addClass("peg-destination")}this._bindDroppableToPeg(this.pegs[f])}var b=this.pegs[0];var e;for(var f=0;f<g.numOfDiscs;f++){e=new Disc({id:f+1,width:g.discMaxWidth-(g.numOfDiscs-f)*20,height:g.discHeight,margin:(g.numOfDiscs-f)*10});this._bindDraggableToDisc(e);b.discs.push(e);b.getPeg().append(e.getDisc());e.getDisc().css("top",f*g.discHeight)}var h=b.getPeg().height();for(var f=1;f<g.numOfPegs;f++){this.pegs[f].getPeg().height(h)}var a=b.top().getDisc();a.draggable("option","disabled",false).addClass("moveable");this.state="playing";this.afterInit(j)};Game.prototype._bindDroppableToPeg=function(a){var c=this;var b=function(i,m){var h=m.draggable;var g=h.attr("id");var n=jQuery(this);n=c.getPegById(n.attr("id"));var l=n.top()===null?true:false;var k=!l?n.top().getDisc().attr("id"):null;var f;if(!l){f=n.getPeg().height()-(n.discs.length+1)*c.options.discHeight}else{f=(c.options.numOfDiscs-1)*c.options.discHeight}h.draggable("option","revert",false);if(!l&&k<=g){h.draggable("option","revert",true);return}var j=c.getPegByDiscId(h.attr("id"));n.push(j.pop());if(!l){n.getPeg().prepend(h);h.css("top",f)}else{n.getPeg().append(h);h.css("top",f)}c.steps++;for(p in c.pegs){for(d in c.pegs[p].discs){c.pegs[p].discs[d].getDisc().draggable("option","disabled",true).removeClass("moveable")}if(c.pegs[p].top()!==null){c.pegs[p].top().getDisc().draggable("option","disabled",false).addClass("moveable")}}c.afterStep(c)};a.getPeg().droppable({hoverClass:"peg-over",drop:b})};Game.prototype._bindDraggableToDisc=function(a){a.getDisc().draggable({revert:"invalid",containment:this.container,cursor:"move",disabled:true,helper:"clone",opacity:0.35})};Game.prototype.getPegById=function(a){if(!a){return null}var c=a.substring(4)*1;for(var b=0;b<this.pegs.length;b++){if(this.pegs[b].id==c){return this.pegs[b]}}return null};Game.prototype.getPegByDiscId=function(a){var c=this.pegs;for(p in c){var b=c[p].discs;for(d in b){if(a===b[d].getDisc().attr("id")){return c[p]}}}return null};Game.prototype.getSteps=function(){return this.steps};Game.prototype.getMaxSteps=function(){return this.maxSteps};Game.prototype.isWin=function(){if(this.state!=="playing"){return}if(this.steps===this.getMaxSteps()){var a=this.pegs[this.options.destinationPeg-1];if(a.discs.length===this.options.numOfDiscs){this.result=1;return 1}}else{if(this.steps>=this.getMaxSteps()){if(this.result!==1){this.result=-1;return -1}return this.result}}return 0};Game.prototype.pause=function(){if(this.state!=="playing"){return}for(p in this.pegs){for(d in this.pegs[p].discs){var a=this.pegs[p].discs[d];a.getDisc().draggable("disable")}this.pegs[p].getPeg().droppable("disable")}this.state="pause";this.onPause(this)};Game.prototype.resume=function(){if(this.state!=="pause"){return}for(p in this.pegs){if(this.pegs[p].discs.length>0){var a=this.pegs[p].discs[0];a.getDisc().draggable("enable")}this.pegs[p].getPeg().droppable("enable")}this.state="playing";this.onResume(this)};Game.prototype.restart=function(c){c=c||{};jQuery.extend(c,this.options);this.maxSteps=Math.pow(2,this.options.numOfDiscs)-1;if(this.state!=="freeze"){this.freeze()}var b=this.pegs[0];var g=[];for(var f=0;f<this.options.numOfPegs;f++){var a=this.pegs[f];this._bindDroppableToPeg(a);a.getPeg().droppable("disable");while(a.discs.length>0){var e=a.pop();this._bindDraggableToDisc(e);e.getDisc().draggable("disable");g.push(e)}}g.sort(function(i,h){return i.id-h.id});b.discs=g;for(var f=0;f<this.options.numOfDiscs;f++){b.getPeg().prepend(b.discs[f].getDisc());b.discs[f].getDisc().css("top",this.options.discHeight*f)}for(var f=0;f<this.options.numOfPegs;f++){this.pegs[f].getPeg().droppable("enable")}b.discs[0].getDisc().draggable("enable").addClass("moveable");this.steps=0;this.result=0;this.state="playing"};Game.prototype.freeze=function(){if(this.state==="freeze"){return}for(p in this.pegs){for(d in this.pegs[p].discs){var a=this.pegs[p].discs[d];a.getDisc().draggable("destroy").removeClass("moveable")}this.pegs[p].getPeg().droppable("destroy")}this.state="freeze";this.onFreeze(this)};
